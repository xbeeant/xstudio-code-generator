plugins {
    id 'java'
    id 'java-library'
}

apply plugin: 'jacoco'
apply plugin: 'signing'
apply plugin: 'maven-publish'

group 'io.github.xbeeant'
archivesBaseName = "code-generator"
version '1.0-SNAPSHOT'

repositories {
    maven {
        url "https://maven.aliyun.com/repository/public"
    }
    maven {
        url "https://maven.aliyun.com/repository/jcenter"
    }
    maven {
        url "https://maven.aliyun.com/repository/spring"
    }
    maven {
        url "https://maven.aliyun.com/repository/spring-plugin"
    }
    maven {
        url "https://maven.aliyun.com/repository/gradle-plugin"
    }
    maven {
        url "https://maven.aliyun.com/repository/google"
    }
    maven {
        url "https://maven.aliyun.com/repository/grails-core"
    }
    maven {
        url "https://maven.aliyun.com/repository/apache-snapshots"
    }
    maven {
        url "https://s01.oss.sonatype.org/content/groups/public/"
    }
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile 'io.github.xbeeant:java-merger:1.0.0-SNAPSHOT'

    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.4.1'

    // driver for generator
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.6.0'

    implementation 'com.alibaba:fastjson:1.2.83'

    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.24'

    testImplementation group: 'commons-io', name: 'commons-io', version: '2.7'
    testImplementation(platform('org.junit:junit-bom:5.9.0'))
    testImplementation('org.junit.jupiter:junit-jupiter:5.9.0')
}


test {
    useJUnitPlatform()
}

task allTask {
    println project.name
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourceJar
}

publishing {

    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'code generator'
                packaging = 'jar'
                // optionally artifactId can be defined here
                description = 'code generator for project using mybatis'
                url = 'https://github.com/xbeeant/xstudio'

                licenses {
                    license {
                        name = "MIT License"
                        url = "https://mit-license.org/"
                    }
                }
                developers {
                    developer {
                        id = "beeant0512"
                        name = "Xiaobiao Huang"
                        email = "huangxb0512@gmail.com"
                    }
                }
                scm {
                    connection = "https://github.com/xbeeant/xstudio"
                    developerConnection = "https://github.com/xbeeant/xstudio"
                    url = "https://github.com/xbeeant/xstudio/packages"
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            if (version.endsWith('-SNAPSHOT')) {
                url = snapshotsRepoUrl
            } else {
                url = releasesRepoUrl
            }

            credentials {
                username = System.getenv("user")
                password = System.getenv("pwd")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        tags "date"
    }
}
